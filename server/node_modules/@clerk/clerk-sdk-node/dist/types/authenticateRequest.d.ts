import type { Clerk, RequestState } from '@clerk/backend';
import type { IncomingMessage, ServerResponse } from 'http';
import type { ClerkMiddlewareOptions } from './types';
export declare const authenticateRequest: (opts: {
    clerkClient: ReturnType<typeof Clerk>;
    apiKey: string;
    secretKey: string;
    frontendApi: string;
    publishableKey: string;
    req: IncomingMessage;
    options?: ClerkMiddlewareOptions;
}) => Promise<RequestState>;
export declare const handleUnknownCase: (res: ServerResponse, requestState: RequestState) => void;
export declare const handleInterstitialCase: (res: ServerResponse, requestState: RequestState, interstitial: string) => void;
export declare const decorateResponseWithObservabilityHeaders: (res: ServerResponse, requestState: RequestState) => void;
//# sourceMappingURL=authenticateRequest.d.ts.map